/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package memoryanalyzer;

import java.awt.GraphicsEnvironment;
import java.awt.Point;
import javax.swing.JFrame;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import common.MsgBox;
import crossplatform.Help;

/**
 *
 * @author master
 */
public class FormConnectTo extends javax.swing.JFrame {
    public static class ConnectToFeedback {
        public ConnectToFeedback() {
            port = 4028;
            ip = Help.LOOPBACK;
            remotePath = "Something path on the remote computer...";
        }
        public int port;
        public String ip;
        public String remotePath;
    }
    /**
     * Creates new form ConnectToForm
     * @param parent
     * @param feedback
     */
    public FormConnectTo(MainForm parent, ConnectToFeedback feedback) {
        initComponents();
        this.parent = parent;
        parent.setEnabled(false);
        // Remember action on close
        this.action_on_close = parent.getDefaultCloseOperation();
        // Set my action
        parent.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        // Set location on the center screen
        this.feedback = feedback;
        initFields(feedback);
        // Add events for textfields on the form
        addEvents4JTextFieldIP();
        addEvents4JTextFieldPort();
        setCenterLocation();
    }
    
    private void setCenterLocation()
    {
        Point p = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint();
        this.setLocation(p.x - this.getWidth() / 2, p.y - this.getHeight() / 2);
    }
    
    private void initFields(ConnectToFeedback feedback) {
        jTextFieldIP.setText(feedback.ip);
        jTextFieldPort.setText(String.valueOf(feedback.port));
        jTextFieldRemotePath.setText(feedback.remotePath);
    }
    
    private void addEvents4JTextFieldIP() {
        jTextFieldIP.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                isValidTextJTextFieldIP();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                isValidTextJTextFieldIP();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                //DO NOTHING
            }
        });
    }
    
    private void addEvents4JTextFieldPort() {
        jTextFieldPort.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                isValidTextJTextFieldPort();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                isValidTextJTextFieldPort();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                //DO NOTHING
            }
        });
    }
    
    private boolean isValidTextJTextFieldIP() {
        String text = jTextFieldIP.getText();
        if(!Help.IsValidIP(text)) {
            new MsgBox(this, "Warning!", "Please input valid IP-address!",
                MsgBox.ACTION_OK).setVisible(true);
            return false;
        }
        return true;
    }
    
    private boolean isValidTextJTextFieldPort() {
        int tmp;
        String text = jTextFieldPort.getText();
        try {
            tmp = Integer.valueOf(text);
            if(!Help.IsValidPort(tmp)) {
                throw new Exception();
            }
        } catch(Exception ex) {
            new MsgBox(this, "Warning!",
                    "Please input valid port (number from " + String.valueOf(Help.MIN_PORT)
                    + " to " + String.valueOf(Help.MAX_PORT) + ")!",
                        MsgBox.ACTION_OK).setVisible(true);
            return false;
        }
        return true;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldIP = new javax.swing.JTextField();
        jTextFieldPort = new javax.swing.JTextField();
        jLabelIP = new javax.swing.JLabel();
        jLabelPort = new javax.swing.JLabel();
        jLabelRemotePath = new javax.swing.JLabel();
        jTextFieldRemotePath = new javax.swing.JTextField();
        jButtonOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Connect to...");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTextFieldIP.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jTextFieldIP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldIP.setText("127.0.0.1");

        jTextFieldPort.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jTextFieldPort.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldPort.setText("4028");

        jLabelIP.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabelIP.setText("IP:");

        jLabelPort.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabelPort.setText("Port:");

        jLabelRemotePath.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabelRemotePath.setText("Remote path to application:");

        jTextFieldRemotePath.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jTextFieldRemotePath.setText("Path to application here...");

        jButtonOk.setText("OK");
        jButtonOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonOkMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRemotePath)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelIP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabelPort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldRemotePath, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jButtonOk)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIP)
                    .addComponent(jLabelPort)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelRemotePath, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRemotePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jButtonOk)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonOkMouseClicked
        feedback.port = Integer.valueOf(jTextFieldPort.getText());
        feedback.ip = jTextFieldIP.getText();
        feedback.remotePath = jTextFieldRemotePath.getText();
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButtonOkMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        parent.setEnabled(true);
        parent.setDefaultCloseOperation(action_on_close);
    }//GEN-LAST:event_formWindowClosed

    // Private variables
    private final int action_on_close;
    private final MainForm parent;
    private final ConnectToFeedback feedback;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabelIP;
    private javax.swing.JLabel jLabelPort;
    private javax.swing.JLabel jLabelRemotePath;
    private javax.swing.JTextField jTextFieldIP;
    private javax.swing.JTextField jTextFieldPort;
    private javax.swing.JTextField jTextFieldRemotePath;
    // End of variables declaration//GEN-END:variables
}
