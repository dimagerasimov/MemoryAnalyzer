/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package common;

import java.awt.GraphicsEnvironment;
import java.awt.Point;
import javax.swing.JFrame;

/**
 *
 * @author master
 */
public class MsgBox extends javax.swing.JFrame {

    public final static int ACTION_OK = 0;
    public final static int ACTION_CLOSE = 1;

    public MsgBox(JFrame retJFrame, String title, String message, int KEY_ACTION) {
        initComponents();
        //Set properties the MsgBox
        InitMsgBox(title, message);
        //Remember return frame
        this.retJFrame =  retJFrame;
        //Remember action key
        this.key_action = KEY_ACTION;
        switch(KEY_ACTION) {
            case ACTION_CLOSE: {
                jButtonOk.setText("Close");
            }
        }
        //If frame feedback was enabled then code below changes state
        if(!retJFrame.isEnabled()) {
            lock = false;
        }
        else {
            lock = true;
            retJFrame.setEnabled(false);
        }
        // Remember action on close
        this.action_on_close = retJFrame.getDefaultCloseOperation();
        // Set my action
        retJFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        // Move to center of screen
        this.setCenterPosition();
    }
    private void InitMsgBox(String title, String message)
    {
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.setTitle(title);
        String multiline_text = ConvertToMultiline(message);
        this.jLabelMessage.setText(multiline_text);
        this.jLabelMessage.setToolTipText(multiline_text);
    }
    private String ConvertToMultiline(String line)
    {
        final int max_length_line = 30;
        String result = "";
        String[] lines = line.split("\n");
        for(int i = 0; i < lines.length; i++) {
            if(lines[i].length() <= max_length_line) {
                result += lines[i] + "\n";
            }
            else {
                int cur_position = 0;
                for(int j = 0; j < lines[i].length() / max_length_line; j++) {
                    result += lines[i].substring(cur_position, cur_position + max_length_line) + "\n";
                    cur_position += max_length_line;
                }
                result += lines[i].substring(cur_position, lines[i].length()) + "\n";
            }
        }
        return "<html><p align=\"center\">"
                + result.replaceAll("\n", "<br>") + "</p></html>";
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonOk = new javax.swing.JButton();
        jLabelMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(300, 100));
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jButtonOk.setText("OK");
        jButtonOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonOkMouseClicked(evt);
            }
        });

        jLabelMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMessage.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelMessage.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jLabelMessageComponentResized(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonOk)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void setCenterPosition()
    {
        Point p = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint();
        this.setLocation(p.x - this.getWidth() / 2, p.y - this.getHeight() / 2);
    }
    
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        switch(key_action) {
            case ACTION_CLOSE:
                //Close feedback
                retJFrame.setVisible(false);
                retJFrame.dispose();
                break;
            default:
                //Enable a frame which called the MsgBox
                if(lock) {
                    retJFrame.setEnabled(true);
                }
                retJFrame.setDefaultCloseOperation(action_on_close);
                break;
        }
    }//GEN-LAST:event_formWindowClosed

    private void jButtonOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonOkMouseClicked
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButtonOkMouseClicked

    private void jLabelMessageComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabelMessageComponentResized
        String[] diff_line = jLabelMessage.getText().split("<br>");
        this.setSize(this.getWidth(), FONT_SIZE * (diff_line.length + 5));
    }//GEN-LAST:event_jLabelMessageComponentResized

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        jLabelMessage.revalidate();
    }//GEN-LAST:event_formMouseEntered
    
    // My variables
    private static final int FONT_SIZE = 15;
    
    private final JFrame retJFrame;
    private final int key_action;
    private final boolean lock;
    private final int action_on_close;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabelMessage;
    // End of variables declaration//GEN-END:variables
}
