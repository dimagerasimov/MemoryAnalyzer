/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package network.client;

import common.MsgBox;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.io.IOException;
import java.net.Socket;
import memoryanalyzer.MainForm;

/**
 *
 * @author master
 */
public class ClientForm extends javax.swing.JFrame {

    /**
     * Creates new form ClientForm
     * @param mainForm
     * @param clientSocket
     */
    public ClientForm(MainForm mainForm, Socket clientSocket) {
        initComponents();
        // Save a feedback
        this.mainForm = mainForm;
        // Save a client socket
        this.clientSocket = clientSocket;
        // Hide MainForm
        mainForm.setVisible(false);
        // Initianalize clientThread as null
        clientThread = null;
        // Set center position this form
        setCenterPosition();
    }
    
    private void setCenterPosition()
    {
        Point p = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint();
        this.setLocation(p.x - this.getWidth() / 2, p.y - this.getHeight() / 2);
    }
    
    public String getPathToApp() {
        return jTextFieldPathApp.getText();
    }
    
    public int getPinPort() {
        int pin_port; 
        try {
            pin_port = Integer.valueOf(jTextFieldPinPort.getText());
        } catch(Exception ex) {
            pin_port = 40028;
            jTextFieldPinPort.setText(String.valueOf(pin_port));
        }
        return pin_port;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAnalyze = new javax.swing.JButton();
        jTextFieldPathApp = new javax.swing.JTextField();
        jButtonDisconnect = new javax.swing.JButton();
        jTextFieldPinPort = new javax.swing.JTextField();
        jLabelPinPort = new javax.swing.JLabel();
        jLabelPathApp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MemoryAnalyzer (client)");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jButtonAnalyze.setText("Try to analyze");
        jButtonAnalyze.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAnalyzeMouseClicked(evt);
            }
        });

        jTextFieldPathApp.setText("/home/master/ForTest/memfree");
        jTextFieldPathApp.setMaximumSize(null);
        jTextFieldPathApp.setMinimumSize(null);

        jButtonDisconnect.setText("Disconnect");
        jButtonDisconnect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDisconnectMouseClicked(evt);
            }
        });

        jTextFieldPinPort.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldPinPort.setText("40028");
        jTextFieldPinPort.setMaximumSize(null);
        jTextFieldPinPort.setMinimumSize(null);

        jLabelPinPort.setText("Pin port:");

        jLabelPathApp.setText("Path to app");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButtonDisconnect)
                        .addGap(178, 178, 178)
                        .addComponent(jButtonAnalyze))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPinPort)
                            .addComponent(jLabelPathApp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPathApp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldPinPort, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(175, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPinPort, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPinPort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPathApp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPathApp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAnalyze)
                    .addComponent(jButtonDisconnect))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // Terminate a client thread
        if(clientThread != null &&
                (clientThread.getState() != Thread.State.TERMINATED)) {
            clientThread.interrupt();
        }
        // Close a client socket
        if(!clientSocket.isClosed()) {
            try {
                clientSocket.close();
            } catch(IOException ex) {
                // DO NOTHING
            }
        }  
        mainForm.setVisible(true); 
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void jButtonAnalyzeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAnalyzeMouseClicked
        if(clientThread == null
                || (clientThread.getState() == Thread.State.TERMINATED)) {
            try {    
                clientThread = new ClientManagerThread(this, clientSocket);
                clientThread.start();
            } catch (IOException ex) {
                new MsgBox(this, "Error!",
                    "Connection with remote computer is lost!",
                            MsgBox.ACTION_CLOSE).setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonAnalyzeMouseClicked

    private void jButtonDisconnectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDisconnectMouseClicked
        ClientManager.ClientManagerError bufferError = new ClientManager.ClientManagerError();
        try {
            new ClientManager(clientSocket, 0, bufferError).CloseConnection();
            new MsgBox(this, "Error!", bufferError.message,
                MsgBox.ACTION_CLOSE).setVisible(true);
        } catch (IOException ex) {
            this.setVisible(false);
            this.dispose();
        }
    }//GEN-LAST:event_jButtonDisconnectMouseClicked

    // My variables
    private final MainForm mainForm;
    private final Socket clientSocket;
    private ClientManagerThread clientThread;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnalyze;
    private javax.swing.JButton jButtonDisconnect;
    private javax.swing.JLabel jLabelPathApp;
    private javax.swing.JLabel jLabelPinPort;
    private javax.swing.JTextField jTextFieldPathApp;
    private javax.swing.JTextField jTextFieldPinPort;
    // End of variables declaration//GEN-END:variables
}
